buildscript {
    repositories {
        mavenLocal()
        //mavenCentral()
        jcenter()
        maven {
            url 'https://repo.eclipse.org/service/local/repositories/maven_central/content'
        }
    }

    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.14.0"
    }
}


apply from: 'common.gradle'


apply plugin: "com.diffplug.gradle.spotless"

allprojects {

    group 'org.eclipse.keyple'

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        maven {
            url 'https://repo.eclipse.org/service/local/repositories/maven_central/content'
        }
        mavenLocal()
        //mavenCentral()
        google()
        jcenter()

    }

    apply plugin: 'pmd'

    pmd {
        ruleSets = [
                "category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod",
                "category/java/bestpractices.xml/AccessorClassGeneration",
                "category/java/bestpractices.xml/AccessorMethodGeneration",
                "category/java/bestpractices.xml/ArrayIsStoredDirectly",
                "category/java/bestpractices.xml/AvoidPrintStackTrace",
                "category/java/bestpractices.xml/AvoidReassigningParameters",
                "category/java/bestpractices.xml/AvoidStringBufferField",
                "category/java/bestpractices.xml/AvoidUsingHardCodedIP",
                "category/java/bestpractices.xml/CheckResultSet",
                "category/java/bestpractices.xml/ConstantsInInterface",
                "category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt",
                "category/java/bestpractices.xml/ForLoopCanBeForeach",
                "category/java/bestpractices.xml/GuardLogStatement",
                "category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation",
                "category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation",
                "category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation",
                "category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation",
                "category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage",
                "category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts",
                "category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert",
                "category/java/bestpractices.xml/JUnitUseExpected",
                "category/java/bestpractices.xml/LooseCoupling",
                "category/java/bestpractices.xml/MethodReturnsInternalArray",
                "category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons",
                "category/java/bestpractices.xml/PositionLiteralsFirstInComparisons",
                "category/java/bestpractices.xml/PreserveStackTrace",
                "category/java/bestpractices.xml/ReplaceEnumerationWithIterator",
                "category/java/bestpractices.xml/ReplaceHashtableWithMap",
                "category/java/bestpractices.xml/ReplaceVectorWithList",
                "category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault",
                "category/java/bestpractices.xml/SystemPrintln",
                "category/java/bestpractices.xml/UnusedFormalParameter",
                "category/java/bestpractices.xml/UnusedImports",
                "category/java/bestpractices.xml/UnusedLocalVariable",
                "category/java/bestpractices.xml/UnusedPrivateField",
                "category/java/bestpractices.xml/UnusedPrivateMethod",
                "category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue",
                "category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue",
                "category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue",
                "category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals",
                "category/java/bestpractices.xml/UseCollectionIsEmpty",
                "category/java/bestpractices.xml/UseVarargs",
                "category/java/codestyle.xml/AvoidProtectedFieldInFinalClass",
                "category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending",
                "category/java/codestyle.xml/CommentDefaultAccessModifier",
                "category/java/codestyle.xml/ConfusingTernary",
                "category/java/codestyle.xml/DontImportJavaLang",
                "category/java/codestyle.xml/DuplicateImports",
                "category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract",
                "category/java/codestyle.xml/ExtendsObject",
                "category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass",
                "category/java/codestyle.xml/ForLoopShouldBeWhileLoop",
                "category/java/codestyle.xml/ForLoopsMustUseBraces",
                "category/java/codestyle.xml/IfElseStmtsMustUseBraces",
                "category/java/codestyle.xml/IfStmtsMustUseBraces",
                "category/java/codestyle.xml/LocalVariableCouldBeFinal",
                "category/java/codestyle.xml/MethodArgumentCouldBeFinal",
                "category/java/codestyle.xml/PrematureDeclaration",
                "category/java/codestyle.xml/TooManyStaticImports",
                "category/java/codestyle.xml/UnnecessaryFullyQualifiedName",
                "category/java/codestyle.xml/UnnecessaryLocalBeforeReturn",
                "category/java/codestyle.xml/UnnecessaryModifier",
                "category/java/codestyle.xml/UnnecessaryReturn",
                "category/java/codestyle.xml/UselessParentheses",
                "category/java/codestyle.xml/UselessQualifiedThis",
                "category/java/codestyle.xml/WhileLoopsMustUseBraces",
                "category/java/design.xml/AbstractClassWithoutAnyMethod",
                "category/java/design.xml/AvoidCatchingGenericException",
                "category/java/design.xml/AvoidDeeplyNestedIfStmts",
                "category/java/design.xml/AvoidRethrowingException",
                "category/java/design.xml/AvoidThrowingNewInstanceOfSameException",
                "category/java/design.xml/AvoidThrowingNullPointerException",
                "category/java/design.xml/AvoidThrowingRawExceptionTypes",
                "category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal",
                "category/java/design.xml/CollapsibleIfStatements",
                "category/java/design.xml/CouplingBetweenObjects",
                "category/java/design.xml/CyclomaticComplexity",
                "category/java/design.xml/DataClass",
                "category/java/design.xml/DoNotExtendJavaLangError",
                "category/java/design.xml/ExceptionAsFlowControl",
                "category/java/design.xml/ExcessiveClassLength",
                "category/java/design.xml/ExcessiveImports",
                "category/java/design.xml/ExcessiveMethodLength",
                "category/java/design.xml/ExcessiveParameterList",
                "category/java/design.xml/ExcessivePublicCount",
                "category/java/design.xml/FinalFieldCouldBeStatic",
                "category/java/design.xml/GodClass",
                "category/java/design.xml/ImmutableField",
                "category/java/design.xml/LawOfDemeter",
                "category/java/design.xml/LogicInversion",
                "category/java/design.xml/LoosePackageCoupling",
                "category/java/design.xml/ModifiedCyclomaticComplexity",
                "category/java/design.xml/NcssConstructorCount",
                "category/java/design.xml/NcssCount",
                "category/java/design.xml/NcssMethodCount",
                "category/java/design.xml/NcssTypeCount",
                "category/java/design.xml/NPathComplexity",
                "category/java/design.xml/SignatureDeclareThrowsException",
                "category/java/design.xml/SimplifiedTernary",
                "category/java/design.xml/SimplifyBooleanAssertion",
                "category/java/design.xml/SimplifyBooleanExpressions",
                "category/java/design.xml/SimplifyBooleanReturns",
                "category/java/design.xml/SimplifyConditional",
                "category/java/design.xml/SingularField",
                "category/java/design.xml/StdCyclomaticComplexity",
                "category/java/design.xml/SwitchDensity",
                "category/java/design.xml/TooManyFields",
                "category/java/design.xml/TooManyMethods",
                "category/java/design.xml/UselessOverridingMethod",
                "category/java/design.xml/UseUtilityClass",
                "category/java/documentation.xml/CommentContent",
                "category/java/documentation.xml/CommentRequired",
                "category/java/documentation.xml/CommentSize",
                "category/java/documentation.xml/UncommentedEmptyConstructor",
                "category/java/documentation.xml/UncommentedEmptyMethodBody",
                "category/java/errorprone.xml/AssignmentToNonFinalStatic",
                "category/java/errorprone.xml/AvoidAssertAsIdentifier",
                "category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop",
                "category/java/errorprone.xml/AvoidCallingFinalize",
                "category/java/errorprone.xml/AvoidCatchingNPE",
                "category/java/errorprone.xml/AvoidCatchingThrowable",
                "category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor",
                "category/java/errorprone.xml/AvoidDuplicateLiterals",
                "category/java/errorprone.xml/AvoidEnumAsIdentifier",
                "category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause",
                "category/java/errorprone.xml/AvoidLosingExceptionInformation",
                "category/java/errorprone.xml/AvoidMultipleUnaryOperators",
                "category/java/errorprone.xml/AvoidUsingOctalValues",
                "category/java/errorprone.xml/BadComparison",
                "category/java/errorprone.xml/BrokenNullCheck",
                "category/java/errorprone.xml/CheckSkipResult",
                "category/java/errorprone.xml/ClassCastExceptionWithToArray",
                "category/java/errorprone.xml/CloneMethodMustBePublic",
                "category/java/errorprone.xml/CloneMethodMustImplementCloneable",
                "category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName",
                "category/java/errorprone.xml/CloneThrowsCloneNotSupportedException",
                "category/java/errorprone.xml/CloseResource",
                "category/java/errorprone.xml/CompareObjectsWithEquals",
                "category/java/errorprone.xml/ConstructorCallsOverridableMethod",
                "category/java/errorprone.xml/DoNotThrowExceptionInFinally",
                "category/java/errorprone.xml/DontUseFloatTypeForLoopIndices",
                "category/java/errorprone.xml/EmptyCatchBlock",
                "category/java/errorprone.xml/EmptyFinalizer",
                "category/java/errorprone.xml/EmptyFinallyBlock",
                "category/java/errorprone.xml/EmptyIfStmt",
                "category/java/errorprone.xml/EmptyInitializer",
                "category/java/errorprone.xml/EmptyStatementBlock",
                "category/java/errorprone.xml/EmptyStatementNotInLoop",
                "category/java/errorprone.xml/EmptySwitchStatements",
                "category/java/errorprone.xml/EmptySynchronizedBlock",
                "category/java/errorprone.xml/EmptyTryBlock",
                "category/java/errorprone.xml/EmptyWhileStmt",
                "category/java/errorprone.xml/EqualsNull",
                "category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize",
                "category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize",
                "category/java/errorprone.xml/FinalizeOverloaded",
                "category/java/errorprone.xml/FinalizeShouldBeProtected",
                "category/java/errorprone.xml/IdempotentOperations",
                "category/java/errorprone.xml/ImportFromSamePackage",
                "category/java/errorprone.xml/InstantiationToGetClass",
                "category/java/errorprone.xml/InvalidSlf4jMessageFormat",
                "category/java/errorprone.xml/JumbledIncrementer",
                "category/java/errorprone.xml/JUnitSpelling",
                "category/java/errorprone.xml/JUnitStaticSuite",
                "category/java/errorprone.xml/LoggerIsNotStaticFinal",
                "category/java/errorprone.xml/MisplacedNullCheck",
                "category/java/errorprone.xml/MissingBreakInSwitch",
                "category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass",
                "category/java/errorprone.xml/MoreThanOneLogger",
                "category/java/errorprone.xml/NonCaseLabelInSwitchStatement",
                "category/java/errorprone.xml/NonStaticInitializer",
                "category/java/errorprone.xml/OverrideBothEqualsAndHashcode",
                "category/java/errorprone.xml/ProperCloneImplementation",
                "category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull",
                "category/java/errorprone.xml/ReturnFromFinallyBlock",
                "category/java/errorprone.xml/SimpleDateFormatNeedsLocale",
                "category/java/errorprone.xml/SingleMethodSingleton",
                "category/java/errorprone.xml/SingletonClassReturningNewInstance",
                "category/java/errorprone.xml/StringBufferInstantiationWithChar",
                "category/java/errorprone.xml/TestClassWithoutTestCases",
                "category/java/errorprone.xml/UnconditionalIfStatement",
                "category/java/errorprone.xml/UnnecessaryBooleanAssertion",
                "category/java/errorprone.xml/UnnecessaryCaseChange",
                "category/java/errorprone.xml/UnnecessaryConversionTemporary",
                "category/java/errorprone.xml/UnusedNullCheckInEquals",
                "category/java/errorprone.xml/UseEqualsToCompareStrings",
                "category/java/errorprone.xml/UselessOperationOnImmutable",
                "category/java/errorprone.xml/UseLocaleWithCaseConversions",
                "category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel",
                "category/java/multithreading.xml/AvoidThreadGroup",
                "category/java/multithreading.xml/DontCallThreadRun",
                "category/java/multithreading.xml/DoubleCheckedLocking",
                "category/java/multithreading.xml/NonThreadSafeSingleton",
                "category/java/multithreading.xml/UnsynchronizedStaticDateFormatter",
                "category/java/multithreading.xml/UseNotifyAllInsteadOfNotify",
                "category/java/performance.xml/AddEmptyString",
                "category/java/performance.xml/AppendCharacterWithChar",
                "category/java/performance.xml/AvoidArrayLoops",
                "category/java/performance.xml/AvoidInstantiatingObjectsInLoops",
                "category/java/performance.xml/BigIntegerInstantiation",
                "category/java/performance.xml/BooleanInstantiation",
                "category/java/performance.xml/ByteInstantiation",
                "category/java/performance.xml/ConsecutiveAppendsShouldReuse",
                "category/java/performance.xml/ConsecutiveLiteralAppends",
                "category/java/performance.xml/InefficientEmptyStringCheck",
                "category/java/performance.xml/InefficientStringBuffering",
                "category/java/performance.xml/InsufficientStringBufferDeclaration",
                "category/java/performance.xml/IntegerInstantiation",
                "category/java/performance.xml/LongInstantiation",
                "category/java/performance.xml/OptimizableToArrayCall",
                "category/java/performance.xml/RedundantFieldInitializer",
                "category/java/performance.xml/ShortInstantiation",
                "category/java/performance.xml/SimplifyStartsWith",
                "category/java/performance.xml/StringInstantiation",
                "category/java/performance.xml/StringToString",
                "category/java/performance.xml/TooFewBranchesForASwitchStatement",
                "category/java/performance.xml/UnnecessaryWrapperObjectCreation",
                "category/java/performance.xml/UseArrayListInsteadOfVector",
                "category/java/performance.xml/UseArraysAsList",
                "category/java/performance.xml/UseIndexOfChar",
                "category/java/performance.xml/UselessStringValueOf",
                "category/java/performance.xml/UseStringBufferForStringAppends",
                "category/java/performance.xml/UseStringBufferLength"
        ]
        // PMD priorities levels:
        // 1. Change absolutely required. Behavior is critically broken/buggy.
        // 2. Change highly recommended. Behavior is quite likely to be broken/buggy.
        // 3. Change recommended. Behavior is confusing, perhaps buggy, and/or against standards/best practices.
        // 4. Change optional. Behavior is not likely to be buggy, but more just flies in the face of standards/style/good taste.
        // 5. Change highly optional. Nice to have, such as a consistent naming policy for package/class/fields…
        rulePriority = 1
    }
}



spotless {
    java {
        target "java/**/*.java"
        licenseHeaderFile '.build/spotless.license.txt'
        importOrder 'java', 'javax', 'org', 'com', 'com.diffplug', ''
        removeUnusedImports()
        eclipse().configFile '.build/spotless.eclipseformat.xml'
    }

    format 'misc', {
        target 'java/**/*.java', 'java/**/*.gradle', 'java/**/*.yml', 'java/**/*.md'

        indentWithSpaces()
        endWithNewline()
    }
}


/*
//create task to agregate javadoc
task aggregatedJavadocs(type: Javadoc, description: 'Generate javadocs from all child projects as if it was a single project', group: 'Documentation') {
    //println 'Create a aggregated javadoc Task to : ' + "$buildDir/docs/javadoc"
    destinationDir = file("$buildDir/docs/javadoc")
    title = "$project.name " +  project(":java:component:keyple-core").version + " version API"
    options.author true
    options.links  'http://docs.oracle.com/javase/6/docs/api/',
            "http://d.android.com/reference/",
            'http://seek-for-android.github.io/javadoc/V4.0.0/'


    options.addStringOption 'Xdoclint:none', '-quiet'

    //init source to whatever file to avoid NO-SOURCE
    source = 'README.MD'
}

//dynamically configure the source
aggregatedJavadocs.doFirst {

    //println "DoFirst in task  : aggregatedJavadocs"

    //add Java modules javadoc
    def aggregatedJavaProjects = [project(":java:component:keyple-core"),
                                  project(":java:component:keyple-calypso"),
                                  project(":java:component:keyple-plugin:keyple-plugin-pcsc"),
                                  project(":java:component:keyple-plugin:keyple-plugin-stub"),
                                  project(":java:component:keyple-plugin:keyple-plugin-remotese")]

    aggregatedJavaProjects.each { aggregatedJavaProject ->
        source += aggregatedJavaProject.javadoc.source
        classpath += aggregatedJavaProject.javadoc.classpath
        excludes += aggregatedJavaProject.javadoc.excludes
        includes += aggregatedJavaProject.javadoc.includes

    }
}
*/
