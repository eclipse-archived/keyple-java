project.version = '0.7.0'+'-'+ timestamp + '-SNAPSHOT'

task copyVersionFile {
    //generate properties file META-INF/keyple.properties with version number
    def props = new Properties()
    def dirs = file "src/main/resources/META-INF/"
    dirs.mkdirs()

    def propertyFile = file "src/main/resources/META-INF/keyple-core.properties"

    if(propertyFile.exists()){
        props.load(propertyFile.newDataInputStream())
    }
    
    if(project.version !="unspecified" && project.version != props.getProperty("version")){
        logger.info('Version of keyple core have changed, overwriting src/main/resources/META-INF/keyple-core.properties')
        props.setProperty("version", project.version)
        props.store(propertyFile.newWriter(), "Properties file generated by gradle")
    }else{
        logger.info("Version of keyple hasn't changed")
    }
}




jar {
    manifest {
        attributes 'Implementation-Title': 'Keyple Core',
        'Implementation-Version': project.version
    }
}


classes.dependsOn copyLICENSE, copyNOTICE,copyVersionFile



task sourcesJar(type: Jar, dependsOn : classes) {
    classifier = 'sources'
    from sourceSets.main.output, sourceSets.main.java
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives sourcesJar, javadocJar
}





dependencies {
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    api "org.slf4j:slf4j-api:${slf4japi_version}"

    testImplementation "junit:junit:${junit_version}"

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation "org.mockito:mockito-core:${mockitocore_version}"

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation "junit:junit:${junit_version}"

    //add slf4j simple logger implementation
    testImplementation "org.slf4j:slf4j-simple:${slf4jsimple_version}"
}
