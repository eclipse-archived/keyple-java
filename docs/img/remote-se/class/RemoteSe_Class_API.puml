@startuml
title
    Keyple Plugin Remote SE
    Public API (01/09/2020)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

package org.eclipse.keyple.core.seproxy {

    +abstract PluginFactory {
        ...
    }
    +interface ReaderPlugin {
        ...
    }
    +interface ReaderPoolPlugin extends ReaderPlugin {
        ...
    }
    +interface SeReader {
        ...
    }

    package event {
        +interface ObservablePlugin extends ReaderPlugin {
            ...
        }
        +interface ObservableReader extends SeReader {
                ...
        }
    }
}

package org.eclipse.keyple.plugin.remotese {

    package virtualse {

        ' Remote Handlers
            +interface "<< <back:#82E0AA>ObservablePlugin</back> >>\nRemoteSeServerPlugin" as RemoteSeServerPlugin {
                +RemoteSeServerReader getReader (String name)
                +void terminateService (\n    String virtualReaderName,\n    Object userOutputData,\n    boolean unregisterVirtualReader)
            }
            ' Remote Readers
            +interface "<< <back:#D0ECE7>SeReader</back> >>\nRemoteSeServerReader" as RemoteSeServerReader {
                +String getServiceId ()
                +<T> T getUserInputData (Class<T> classOfT)
                +<T extends AbstractMatchingSe> T getInitialSeContent (\n    Class<T> classOfMatchingSe)
            }
            +interface "<< <back:#FDEBD0>ObservableReader</back> >>\nRemoteSeServerObservableReader" as RemoteSeServerObservableReader extends RemoteSeServerReader {
            }
            +interface "<< <back:#D2B4DE>ReaderPlugin</back> >>\nRemoteSeClientPlugin" as RemoteSeClientPlugin {
            }
            +interface "<< <back:#82E0AA>ObservablePlugin</back> >>\nRemoteSeClientObservablePlugin" as RemoteSeClientObservablePlugin extends RemoteSeClientPlugin {
            }
            +interface "<< <back:#AED6F1>ReaderPoolPlugin</back> >>\nRemoteSePoolClientPlugin" as RemoteSePoolClientPlugin {
            }

        package impl as virtualSeImpl {

            ' Factories
            +class "<< <back:#F5B7B1>PluginFactory</back> >>\nRemoteSeServerPluginFactory" as RemoteSeServerPluginFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as RemoteSeServerPluginFactoryNodeStep {
                + PluginObservationStep withAsyncNode (\n    KeypleServerAsync endpoint)
                + PluginObservationStep withSyncNode ()
            }
            +interface "PluginObserverStep" as RemoteSeServerPluginFactoryPluginObserverStep {
                + EventNotificationPoolStep withPluginObserver (\n    ObservablePlugin.PluginObserver observer)
            }
            +interface "EventNotificationPoolStep" as RemoteSeServerPluginFactoryEventNotificationPoolStep {
                + BuilderStep usingDefaultEventNotificationPool ()
                + BuilderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "BuilderStep" as RemoteSeServerPluginFactoryBuilderStep {
                + RemoteSeServerPluginFactory build ()
            }
            +class "<< <back:#F5B7B1>PluginFactory</back> >>\nRemoteSeClientPluginFactory" as RemoteSeClientPluginFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as RemoteSeClientPluginFactoryNodeStep {
                + AsyncNodePluginStep withAsyncNode (\n    KeypleClientAsync endpoint)
                + SyncNodePluginStep withSyncNode (\n    KeypleClientSync endpoint)
            }
            +interface "AsyncNodePluginStep" as RemoteSeClientPluginFactoryAsyncNodePluginStep {
                + AsyncNodePluginEventNotificationPoolStep withPluginObservation ()
                + AsyncNodeReaderStep withoutPluginObservation ()
            }
            +interface "AsyncNodePluginEventNotificationPoolStep" as RemoteSeClientPluginFactoryAsyncNodePluginEventNotificationPoolStep {
                + AsyncNodeReaderStep usingDefaultEventNotificationPool ()
                + AsyncNodeReaderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "AsyncNodeReaderStep" as RemoteSeClientPluginFactoryAsyncNodeReaderStep {
                + AsyncNodeReaderEventNotificationPoolStep withReaderObservation ()
                + BuilderStep withoutReaderObservation ()
            }
            +interface "AsyncNodeReaderEventNotificationPoolStep" as RemoteSeClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep {
                + BuilderStep usingDefaultEventNotificationPool ()
                + BuilderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "SyncNodePluginStep" as RemoteSeClientPluginFactorySyncNodePluginStep {
                + ServerPushPluginEventStrategyStep withPluginObservation ()
                + SyncNodeReaderStep withoutPluginObservation ()
            }
            +interface "ServerPushPluginEventStrategyStep" as RemoteSeClientPluginFactoryServerPushPluginEventStrategyStep {
                + SyncNodePluginEventNotificationPoolStep usingPluginPollingStrategy (\n    int requestFrequencyInSeconds)
                + SyncNodePluginEventNotificationPoolStep usingPluginLongPollingStrategy (\n    int requestTimeoutInSeconds)
            }
            +interface "SyncNodePluginEventNotificationPoolStep" as RemoteSeClientPluginFactorySyncNodePluginEventNotificationPoolStep {
                + SyncNodeReaderStep usingDefaultEventNotificationPool ()
                + SyncNodeReaderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "SyncNodeReaderStep" as RemoteSeClientPluginFactorySyncNodeReaderStep {
                + ServerPushReaderEventStrategyStep withReaderObservation ()
                + BuilderStep withoutReaderObservation ()
            }
            +interface "ServerPushReaderEventStrategyStep" as RemoteSeClientPluginFactoryServerPushReaderEventStrategyStep {
                + SyncNodeReaderEventNotificationPoolStep usingReaderPollingStrategy (\n    int requestFrequencyInSeconds)
                + SyncNodeReaderEventNotificationPoolStep usingReaderLongPollingStrategy (\n    int requestTimeoutInSeconds)
            }
            +interface "SyncNodeReaderEventNotificationPoolStep" as RemoteSeClientPluginFactorySyncNodeReaderEventNotificationPoolStep {
                + BuilderStep usingDefaultEventNotificationPool ()
                + BuilderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "BuilderStep" as RemoteSeClientPluginFactoryBuilderStep {
                + RemoteSeClientPluginFactory build ()
            }
            +class "<< <back:#F5B7B1>PluginFactory</back> >>\nRemoteSePoolClientPluginFactory" as RemoteSePoolClientPluginFactory {
                + {static} NodeStep builder ()
            }
            +class "NodeStep" as RemoteSePoolClientPluginFactoryNodeStep {
                + BuilderStep withAsyncNode (\n    KeypleClientAsync endpoint)
                + BuilderStep withSyncNode (\n    KeypleClientSync endpoint)
            }
            +interface "BuilderStep" as RemoteSePoolClientPluginFactoryBuilderStep {
                + RemoteSePoolClientPluginFactory build ()
            }

            ' Utilitaires Master
            +class RemoteSeServerUtils {
                ____
                + {static} RemoteSeServerPlugin getAsyncPlugin ()
                + {static} KeypleServerAsyncNode getAsyncNode ()
                ....
                + {static} RemoteSeServerPlugin getSyncPlugin ()
                + {static} KeypleServerSyncNode getSyncNode ()
            }
            +class RemoteSeClientUtils {
                ____
                + {static} RemoteSeClientPlugin getAsyncPlugin ()
                + {static} RemoteSeClientObservablePlugin getAsyncObservablePlugin ()
                + {static} KeypleClientAsyncNode getAsyncNode ()
                ....
                + {static} RemoteSeClientPlugin getSyncPlugin ()
                + {static} RemoteSeClientObservablePlugin getSyncObservablePlugin ()
            }
            +class RemoteSePoolClientUtils {
                ____
                + {static} RemoteSePoolClientPlugin getAsyncPlugin ()
                + {static} KeypleClientAsyncNode getAsyncNode ()
                ....
                + {static} RemoteSePoolClientPlugin getSyncPlugin ()
            }

        }

    }

    package core {

        ' DTO
        +class KeypleMessageDto {
            + String sessionId
            + String action
            + String clientNodeId
            + String serverNodeId
            + String nativeReaderName
            + String virtualReaderName
            + String body
        }
        +interface KeypleClientReaderEventFilter {
            +Object beforePropagation (ReaderEvent event)
            +Class<? extends Object> getUserOutputDataClass ()
            +void afterPropagation (Object userOutputData)
        }

        ' Nodes & Senders
            +interface KeypleClientAsyncNode {
                +void onOpen (String sessionId)
                +void onMessage (KeypleMessageDto msg)
                +void onClose (String sessionId)
                +void onError (String sessionId, Throwable error)
            }
            +interface KeypleClientAsync {
                +void openSession (String sessionId)
                +void sendMessage (KeypleMessageDto msg)
                +void closeSession (String sessionId)
            }
            +interface KeypleServerAsyncNode {
                +void onMessage (KeypleMessageDto msg)
                +void onError (String sessionId, Throwable error)
            }
            +interface KeypleServerAsync {
                +void sendMessage (KeypleMessageDto msg)
            }
            +interface KeypleClientSyncNode {
            }
            +interface KeypleClientSync {
                +List<KeypleMessageDto> sendRequest (\n    KeypleMessageDto msg)
            }
            +interface KeypleServerSyncNode {
                +List<KeypleMessageDto> onRequest (\n    KeypleMessageDto msg)
            }

    }

    package nativese {

            +interface NativeSeClientService {
                +<T> T executeRemoteService (\n    RemoteServiceParameters parameters,\n    Class<T> classOfT)
            }
            +class RemoteServiceParameters {
                +{static} Builder builder (String serviceId, SeReader nativeReader)
            }
            +class "Builder" as RemoteServiceParametersBuilder {
                +Builder withUserInputData (Object userInputData)
                +Builder withInitialSeContent (AbstractMatchingSe matchingSe)
                +RemoteServiceParameters build ()
            }
            +interface NativeSeServerService {
            }
            +interface NativeSePoolServerService {
            }

        package impl as nativeSeImpl {

            ' Factories
            +class NativeSeClientServiceFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as NativeSeClientServiceFactoryNodeStep {
                + ReaderStep withAsyncNode (KeypleClientAsync endpoint)
                + ReaderStep withSyncNode (KeypleClientSync endpoint)
            }
            +interface "ReaderStep" as NativeSeClientServiceFactoryReaderStep {
                + BuilderStep withReaderObservation (KeypleClientReaderEventFilter filter)
                + BuilderStep withoutReaderObservation ()
            }
            +interface "BuilderStep" as NativeSeClientServiceFactoryBuilderStep {
                + NativeSeClientService getService ()
            }
            +class NativeSeServerServiceFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as NativeSeServerServiceFactoryNodeStep {
                + BuilderStep withAsyncNode (KeypleServerAsync endpoint)
                + BuilderStep withSyncNode ()
            }
            +interface "BuilderStep" as NativeSeServerServiceFactoryBuilderStep {
                + NativeSeServerService getService ()
            }
            +class NativeSePoolServerServiceFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as NativeSePoolServerServiceFactoryNodeStep {
                + BuilderStep withAsyncNode (KeypleServerAsync endpoint)
                + BuilderStep withSyncNode ()
            }
            +interface "BuilderStep" as NativeSePoolServerServiceFactoryBuilderStep {
                + NativeSePoolServerService getService ()
            }

            ' Utilitaires Slave
            +class NativeSeClientUtils {
                + {static} NativeSeClientService getService ()
                + {static} KeypleClientAsyncNode getAsyncNode ()
            }
            +class NativeSeServerUtils {
                + {static} KeypleServerAsyncNode getAsyncNode ()
                + {static} KeypleServerSyncNode getSyncNode ()
            }
            +class NativeSePoolServerUtils {
                + {static} KeypleServerAsyncNode getAsyncNode ()
                + {static} KeypleServerSyncNode getSyncNode ()
            }

        }

    }

}

' Associations
RemoteSeServerPluginFactory ..> RemoteSeServerPluginFactoryNodeStep #C_USE
RemoteSeServerPluginFactoryNodeStep ..> RemoteSeServerPluginFactoryPluginObserverStep #C_USE
RemoteSeServerPluginFactoryPluginObserverStep ..> RemoteSeServerPluginFactoryEventNotificationPoolStep #C_USE
RemoteSeServerPluginFactoryEventNotificationPoolStep ..> RemoteSeServerPluginFactoryBuilderStep #C_USE

RemoteSeClientPluginFactory ..> RemoteSeClientPluginFactoryNodeStep #C_USE
RemoteSeClientPluginFactoryNodeStep ..> RemoteSeClientPluginFactoryAsyncNodePluginStep #C_USE
RemoteSeClientPluginFactoryAsyncNodePluginStep ..> RemoteSeClientPluginFactoryAsyncNodePluginEventNotificationPoolStep #C_USE
RemoteSeClientPluginFactoryAsyncNodePluginEventNotificationPoolStep ..> RemoteSeClientPluginFactoryAsyncNodeReaderStep #C_USE
RemoteSeClientPluginFactoryAsyncNodePluginStep ..> RemoteSeClientPluginFactoryAsyncNodeReaderStep #C_USE
RemoteSeClientPluginFactoryNodeStep ..> RemoteSeClientPluginFactorySyncNodePluginStep #C_USE
RemoteSeClientPluginFactorySyncNodePluginStep ..> RemoteSeClientPluginFactoryServerPushPluginEventStrategyStep #C_USE
RemoteSeClientPluginFactoryServerPushPluginEventStrategyStep ..> RemoteSeClientPluginFactorySyncNodePluginEventNotificationPoolStep #C_USE
RemoteSeClientPluginFactorySyncNodePluginStep ..> RemoteSeClientPluginFactorySyncNodeReaderStep #C_USE
RemoteSeClientPluginFactoryAsyncNodeReaderStep ..> RemoteSeClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep #C_USE
RemoteSeClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep ..> RemoteSeClientPluginFactoryBuilderStep #C_USE
RemoteSeClientPluginFactoryAsyncNodeReaderStep ..> RemoteSeClientPluginFactoryBuilderStep #C_USE
RemoteSeClientPluginFactorySyncNodePluginEventNotificationPoolStep ..> RemoteSeClientPluginFactorySyncNodeReaderStep #C_USE
RemoteSeClientPluginFactorySyncNodeReaderStep ..> RemoteSeClientPluginFactoryBuilderStep #C_USE
RemoteSeClientPluginFactorySyncNodeReaderStep ..> RemoteSeClientPluginFactoryServerPushReaderEventStrategyStep #C_USE
RemoteSeClientPluginFactoryServerPushReaderEventStrategyStep ..> RemoteSeClientPluginFactorySyncNodeReaderEventNotificationPoolStep #C_USE
RemoteSeClientPluginFactorySyncNodeReaderEventNotificationPoolStep ..> RemoteSeClientPluginFactoryBuilderStep #C_USE

RemoteSePoolClientPluginFactory ..> RemoteSePoolClientPluginFactoryNodeStep #C_USE
RemoteSePoolClientPluginFactoryNodeStep ..> RemoteSePoolClientPluginFactoryBuilderStep #C_USE

RemoteSeServerPlugin *--> "1..N" RemoteSeServerReader #C_LINK : readers

KeypleClientSyncNode --> KeypleClientSync #C_LINK : use >
KeypleClientAsyncNode --> KeypleClientAsync #C_LINK : use >
KeypleServerAsyncNode -up-> KeypleServerAsync #C_LINK : use >

NativeSeClientService ..> RemoteServiceParameters #C_USE : use >
RemoteServiceParameters +-- RemoteServiceParametersBuilder #C_LINK

NativeSeClientServiceFactory ..> NativeSeClientServiceFactoryNodeStep #C_USE
NativeSeClientServiceFactoryNodeStep ..> NativeSeClientServiceFactoryReaderStep #C_USE
NativeSeClientServiceFactoryReaderStep ..> NativeSeClientServiceFactoryBuilderStep #C_USE

NativeSeServerServiceFactory ..> NativeSeServerServiceFactoryNodeStep #C_USE
NativeSeServerServiceFactoryNodeStep ..> NativeSeServerServiceFactoryBuilderStep #C_USE

NativeSePoolServerServiceFactory ..> NativeSePoolServerServiceFactoryNodeStep #C_USE
NativeSePoolServerServiceFactoryNodeStep ..> NativeSePoolServerServiceFactoryBuilderStep #C_USE

' == LAYOUT ==

ObservableReader -[hidden]- RemoteSeServerPlugin

RemoteSeServerObservableReader -[hidden]- RemoteSeClientPlugin
RemoteSeClientObservablePlugin -[hidden]- RemoteSePoolClientPlugin

RemoteSeServerPluginFactoryBuilderStep -[hidden]- RemoteSeServerUtils
RemoteSeServerUtils -[hidden]- RemoteSeClientUtils
RemoteSePoolClientPluginFactoryBuilderStep -[hidden]- RemoteSePoolClientUtils

NativeSeClientServiceFactoryBuilderStep -[hidden]- NativeSeClientUtils
NativeSeServerServiceFactoryBuilderStep -[hidden]- NativeSeServerUtils
NativeSePoolServerServiceFactoryBuilderStep -[hidden]- NativeSePoolServerUtils

KeypleClientAsync -[hidden]- KeypleServerAsync
KeypleServerAsyncNode -[hidden]- KeypleMessageDto
KeypleMessageDto -[hidden]- KeypleClientReaderEventFilter
KeypleClientReaderEventFilter -[hidden]- KeypleClientSyncNode
KeypleClientSync -[hidden]- KeypleServerSyncNode

RemoteServiceParametersBuilder -[hidden]- NativeSeServerService
NativeSeServerService -[hidden]- NativeSePoolServerService

RemoteSePoolClientUtils -[hidden]- NativeSePoolServerServiceFactory
RemoteSeClientPluginFactoryBuilderStep -[hidden]- NativeSeServerServiceFactory
RemoteSeClientUtils -[hidden]- NativeSeClientServiceFactory

' == STYLE ==

package org.eclipse.keyple.core.seproxy #C_GREY1 {}
package event #C_GREY2 {}
package core #C_GREY1 {}
package nativese #C_GREY1 {}
package nativeSeImpl #C_GREY2 {}
package virtualse #C_GREY1 {}
package virtualSeImpl #C_GREY2 {}

abstract PluginFactory <<grey>> #F5B7B1
interface ReaderPlugin <<grey>> #D2B4DE
interface ReaderPoolPlugin <<grey>> #AED6F1
interface SeReader <<grey>> #D0ECE7
interface ObservablePlugin <<grey>> #82E0AA
interface ObservableReader <<grey>> #FDEBD0

class RemoteSeServerUtils <<green>>
interface RemoteSeServerPlugin <<green>>
interface RemoteSeServerReader <<green>>
interface RemoteSeServerObservableReader <<green>>
class RemoteSeServerPluginFactory <<green>>
interface RemoteSeServerPluginFactoryNodeStep <<green>>
interface RemoteSeServerPluginFactoryPluginObserverStep <<green>>
interface RemoteSeServerPluginFactoryEventNotificationPoolStep <<green>>
interface RemoteSeServerPluginFactoryBuilderStep <<green>>
interface NativeSeClientService <<green>>
class NativeSeClientServiceFactory <<green>>
interface NativeSeClientServiceFactoryNodeStep <<green>>
interface NativeSeClientServiceFactoryReaderStep <<green>>
interface NativeSeClientServiceFactoryBuilderStep <<green>>
class RemoteServiceParameters <<green>>
class RemoteServiceParametersBuilder <<green>>
class NativeSeClientUtils <<green>>

class RemoteSeClientUtils <<purple>>
interface RemoteSeClientPlugin <<purple>>
class RemoteSeClientPluginFactory <<purple>>
interface RemoteSeClientPluginFactoryNodeStep <<purple>>
interface RemoteSeClientPluginFactoryAsyncNodePluginStep <<purple>>
interface RemoteSeClientPluginFactoryAsyncNodePluginEventNotificationPoolStep <<purple>>
interface RemoteSeClientPluginFactoryAsyncNodeReaderStep <<purple>>
interface RemoteSeClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep <<purple>>
interface RemoteSeClientPluginFactorySyncNodePluginStep <<purple>>
interface RemoteSeClientPluginFactoryServerPushPluginEventStrategyStep <<purple>>
interface RemoteSeClientPluginFactorySyncNodePluginEventNotificationPoolStep <<purple>>
interface RemoteSeClientPluginFactorySyncNodeReaderStep <<purple>>
interface RemoteSeClientPluginFactoryServerPushReaderEventStrategyStep <<purple>>
interface RemoteSeClientPluginFactorySyncNodeReaderEventNotificationPoolStep <<purple>>
interface RemoteSeClientPluginFactoryBuilderStep <<purple>>
interface NativeSeServerService <<purple>>
class NativeSeServerServiceFactory <<purple>>
interface NativeSeServerServiceFactoryNodeStep <<purple>>
interface NativeSeServerServiceFactoryBuilderStep <<purple>>
class NativeSeServerUtils <<purple>>

interface RemoteSeClientObservablePlugin <<purple>>

class RemoteSePoolClientUtils <<blue>>
interface RemoteSePoolClientPlugin <<blue>>
class RemoteSePoolClientPluginFactory <<blue>>
interface RemoteSePoolClientPluginFactoryNodeStep <<blue>>
interface RemoteSePoolClientPluginFactoryBuilderStep <<blue>>
interface NativeSePoolServerService <<blue>>
class NativeSePoolServerServiceFactory <<blue>>
interface NativeSePoolServerServiceFactoryNodeStep <<blue>>
interface NativeSePoolServerServiceFactoryBuilderStep <<blue>>
class NativeSePoolServerUtils <<blue>>

KeypleClientSyncNode <<red>>
KeypleServerSyncNode <<red>>
KeypleClientAsyncNode <<red>>
KeypleServerAsyncNode <<red>>

KeypleMessageDto <<grey>>
KeypleClientReaderEventFilter <<grey>>

@enduml